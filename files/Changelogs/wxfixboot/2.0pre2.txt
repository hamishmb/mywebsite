WxFixBoot (2.0~pre2):

  * Changes since v1.0.2:
  * Bring coding techniques up to date.
  * Use a new authentication dialog.
  * Change the splash screen to use a progress bar.
  * Get rid of the move old log files script.
  * Begin optimising startup scripts.
  * Move global function StartProcess into CoreTools.
  * Move functions DetermineOSArchitechure, CheckForLILO, CheckForGRUBBIOS into CoreStartupTools.
  * Move some thread dialog functions into DialogTools and test them.
  * Make a modified version of StartThreadProcess for later use.
  * Move the remaining dialog functions into DialogTools.
  * Get rid of the global StartProcess function.
  * Use tuples instead of lists where possible (read-only, and use less memory).
  * Move SetDefaults to MainStartupTools.
  * Move GetBootloader to MainStartupTools.
  * Move CheckForUEFIPartition to MainStartupTools.
  * Move CheckForGRUBEFI, CheckForELILO to CoreStartupTools.
  * Move FinalCheck to MainStartupTools.
  * Move the rest of the startup tools to their separate packages and modules.
  * Use sizers with InitWindow.
  * Use sizers with MainWindow.
  * Use sizers with SettingsWindow.
  * Use sizers with Bootloader Options Window.
  * Use sizers with ProgressWindow.
  * Move core backend tools to their separate file.
  * Move helper backend tools to their separate file.
  * Move essential backend tools to their separate file.
  * Create a Github repository.
  * Move all bootloader stuff into a separate package.
  * Rename MainBackendThread() to BackendThread()
  * Always name wx.Panels self.Panel.
  * Don't call subprocess directly.
  * Don't call mount directly in most places.
  * Use sizers with RestoreWindow.
  * Fix sizer glitch in SettingsWindow.
  * Pull in new GetDevInfo package from DDRescue-GUI v1.5.
  * Count operations in MainWindow.
  * Fix rescanning for bootloaders from BootloaderOptionsWIndow.
  * No longer depend on grep.
  * No longer depend on find.
  * Move some bootloader stuff to MainBackendTools.
  * Make sure each modules has the "from __future__ import x,y,z" imports.
  * Move HelperBackendTools().CheckInternetConnection() to EssentialBackendTools.
  * Always use Piping=True when calling StartThreadProcess() (preparation for switch to CoreTools().StartProcess).
  * Write docstrings for all functions/methods and classes.
  * Use "//" for integer division where possible.
  * Make Bootloader Options Window more user-friendly.
  * Fix crash on startup when using a BIOS bootloader (doesn't affect v1.0.2).
  * Save MBR to RAM instead of a temporary file in /tmp/wxfixboot/.
  * Get rid of the temporary directory (/tmp/wxfixboot).
  * Don't allow the user to specify partition schemes any more.
  * Rewrite/Add more logging messages.
  * Reduce Duplication in MainBackendTools.
  * Create CoreTools().IsMounted().
  * Modify GetDevInfo package to use dictionaries.
  * Keep more info about/disk/partition relationships.
  * Get partition schemes in GetDevInfo package.
  * Get FileSystem Types in GetDevInfo package.
  * Refactor GetDevInfo package.
  * Use GetDevInfo package on startup.
  * Start phasing out old device info collectors in favour of the GetDevInfo package.
  * Remove dependency on lsblk.
  * Rewrite CoreStartupTools().CheckForUEFIPartition().
  * Write an emergency exit function.
  * Fix UnicodeDecodeError while still showing all info in log file.
  * Design new Bootloader Options Window.
  * Pull in new outputbox code from DDRescue-GUI v1.5.
  * Enable support for the output box in CoreTools().StartProcess().
  * Don't use CoreBackendTools().StartThreadProcess().
  * Remove CoreBackendTools().StartThreadProcess().
  * Enable checking where partitions are mounted in CoreTools().IsMounted().
  * Performance Improvements and better error checking in MainBackendTools.
  * Write more error check and logging messages in.
  * Weight each startup operation to make the progressbar on the splash screen more accurate.
  * Write a function to return the partition mounted at a given mountpoint.
  * Refactor some of the startup scripts.
  * Get rid of MainStartupTools().GetRootFSAndRootDev().
  * Make MainStartupTools().GetLinuxOSs() use dictionaries.
  * Get rid of the 'PartitionListWithFSType' global variable.
  * Save LiveDisk in a dictionary instead of an independent global variable.
  * Get rid of the 'GPTInAutoPartSchemeList' and 'MBRInAutoPartSchemeList' global variables.
  * Get rid of the 'PartSchemeList' global variable.
  * Test badsector and quick fs check.
  * Change the way module functions are called to allow for conditional tests in MainWindow.CountOperations().
  * Test backing up boot sector and partition table.
  * Test restoring boot sector and partition table.
  * Don't use OSList any more.
  * More fixing and refactoring.
  * Don't hunt out kernels + initrds for LILO/ELILO any more.
  * Don't use DeviceList any more.
  * Don't use AutoDefaultOS any more.
  * Use new dictionary based OS format for DefaultOS variable.
  * Don't use DefaultOS any more.
  * Don't use AutoFirmwareType any more.
  * Don't use FirmwareType any more.
  * Move CoreBackendTools.GetPartitionUUID() to GetDevInfo.GetUUID().
  * Remove GetDevInfo.GetPartitions().
  * Move CoreBackendTools.GetDeviceID() to GetDevInfo.GetID().
  * Optimise GetDevInfo.
  * Don't use LinuxPartList any more.
  * Don't use OSListWithPackageManagers any more.
  * Don't use DisableBootloaderOperations any more.
  * Absorb HelperBackendTools.LookForAPTonPartition() into MainBootloaderTools.PrepareForBootloaderInstallation().
  * Refactor MainBootloaderTools.PrepareForBootloaderInstallation().
  * Absorb part of MainBootloaderTools.PrepareForBootloaderInstallation() into MainStartupTools.GetLinuxOSs().
  * Add experimental detection of Ubuntu-based live disks and Parted Magic.
  * Write a function to get the mountpoint of a given partition.
  * Detect live disks more reliably, including fedora-based ones.
  * Don't use OSsForBootloaderRemoval any more.
  * Don't use OSsForBootloaderInstallation any more.
  * Use custom dialog buttons (only possible on wxpython 3) where wanted, to help clarify messages.
  * Don't use RootFS or AutoRootFS any more.
  * Don't use BootloaderToInstall any more.
  * Test updating GRUB2.
  * Test reinstalling GRUB2.
  * Test installing LILO.
  * Test updating LILO.
  * Test reinstalling LILO.
  * Test updating GRUB-EFI.
  * Test reinstalling GRUB-EFI.
  * Rewrite the GetDevInfo package to parse XML output from lshw.
  * Speed up CoreTools.StartProcess().
  * Refactor and improve error handling in GetDevInfo package.
  * Test with installing ELILO.
  * Test with reinstalling ELILO.
  * Test with updating ELILO.
  * Start creating new bootloader options window and system info window.
  * Semi-finish implementing the design of the new bootloader options window.
  * Test with Parted Magic.
  * Changes since 2.0~pre1:
  * Make GetDevInfo work again in Ubuntu 12.04.
  * Don't use UEFIVariables any more.
  * Don't use RootDevice or AutoRootDevice any more.
  * Don't use Bootloader any more.
  * Don't use AutoBootloader any more.
  * Don't use PrevBootloaderSetting any more.
  * Don't use AutoUEFISystemPartition any more.
  * Don't UEFISystemPartition any more.
  * Don't use EmptyEFIPartition any more.
  * Remove "GPTDisks" from SystemInfo.
  * Remove "MBRDisks" from SystemInfo.
  * Start to create infrastructure for NewBootloaderOptionsWindow.
  * Add all the functions in CoreBackendTools to CoreTools.
  * Remove CoreBackendTools.
  * Add 1st bootloader info page to SystemInfoWindow.
  * Add 2nd bootloader info page to SystemInfoWindow.
  * Gather bootloader timeouts and global kernel options on startup.
  * Link /boot partitions and EFI partitions to each OS.
  * On EFI systems and with EFI Bootloaders, set BootloaderInfo[OS]["BootDisk"] to OSInfo[OS]["EFIPartition"].
  * Find the boot disk when LILO is the bootloader.
  * Start to implement finding boot disk with GRUB-LEGACY.
  * Add support for writing lines to a process's stdin in CoreTools.StartProcess().
  * Get boot records for all disks and partitions on startup.
  * Save boot record strings on startup.
  * Write a function to find GRUB2 and GRUB-LEGACY.
  * Get GRUB2's menu entries.
  * Remove deprecated functions in GetDevInfo package.
  * General refactoring and error checking improvements.
  * Write more logging messages in BootloaderConfigObtainingTools.
  * Remove CoreStartupTools.MountUEFIPartition() in favour of using CoreTools.MountPartition().
  * Remove the old bootloader info getter from BootloaderTools.
  * Add experimental support for finding the default OS for GRUB2.
  * Write a GRUB2 menuentry parser.
  * Fix a bug in CoreTools.Find() where not all files are searched in any given folder.
  * Fix detection of GRUB2 default OS.
  * Get kernel options for each of GRUB2's menuentries.
  * Experimental menuentry parsing for GRUB-LEGACY.
  * Fix a bug when parsing global kernel options with GRUB2.
  * Experimental menuentry parsing for LILO/ELILO.
  * Write comments and logging messages in menuentry parsing functions.
  * Test new bootloader config getting functions on LILO.
  * Enable detecting default OS on LILO and ELILO.
  * Test new bootloader config getting functions on ELILO.
  * Disable old bootloader info getter.
  * Remove old bootloader info getter.
  * Make GUI elements in SystemInfoWindow work.
  * Fix a bug where the background image doesn't show on the startup window on Ubuntu > 14.04 (WxPython 3 or higher).
  * Add IsModifyable to SystemInfo and NewBootloaderOptionsWindow.
  * Remove incorrect UEFI variables warning on BIOS systems.
  * Remove SystemInfo["AutoUEFISystemPartition"], SystemInfo["PrevBootloaderSetting"], SystemInfo["OSsWithPackageManagers"], and SystemInfo["EmpyEFIPartition"].
  * Remove all backup/restore functionality relating to partition tables (better tools such as GParted are available for this).
  * Remove dependency on "lsb_release", instead using the "platform" module built into python2 for determining OS names.
  * Add experimental LVM support.
  * Write event-handling code for the new bootloader options window.
  * Initialise GUi state and settings for NewBootloaderOptionsWindow.
  * Load GUI settings in NewBootloaderOptionsWindow.
  * Set GUI state in NewBootloaderOptionsWindow.
  * Save settings in NewBootloaderOptionsWindow.
  * Save GUI state in NewBootloaderOptionsWindow.
  * Make NewBootloaderOptionsWindow respond correctly to changes in the OS selection box.
  * Count new bootloader operations in MainWindow.CountOperations.
  * Count operations after closing NewBootloaderOptionsWindow.
  * Modify MainBackendTools.RemoveOldBootloader to use new bootloader settings.
  * Modify MainBackendTools.InstallNewBootloader to use new bootloader settings.
  * Modify MainBackendTools.SetNewBootloaderConfig to use new bootloader settings.
  * Do a quick test to make sure updating GRUB is working.
  * Don't use SystemInfo["BootloaderToInstall"] any more.
  * Remove the old bootloader options window.
  * Rename NewBootloaderOptionsWindow to BootloaderOptionsWindow.
  * Remove everything previously used for reinstalling the bootloader.
  * Remove everything previously used for updating the bootloader.
  * Remove unneeded GUI elements from SettingsWindow.
  * Remove SystemInfo["AutoBootloader"].
  * Get rid of the BootloaderTimeout variable.
  * Remove the bootloader timeout spinner from SettingsWindow.
  * Remove SystemInfo["AutoRootDevice"].
  * Remove SystemInfo["RootDevice"].
  * Remove the root device choice box from SettingsWindow.
  * Remove MainBootloaderTools.Manage Bootloaders().
  * Remove SystemInfo["RootFS"].
  * Remove SystemInfo["DefaultOS"].
  * Remove SystemInfo["Bootloader"].
  * Remove the installed bootloader choicebox from SettingsWindow.
  * Get rid of the KernelOptions variable.
  * Reduce duplication in CoreTools.IsMounted().
  * General maintenance.
  * Prepare to support Fedora in BootloaderInstallationTools.
  * Prepare to support Fedora in BootloaderRemovalTools.
  * Add proper LVM support in GetDevInfo.
  * Fix a few bugs in GetDevInfo.
  * Start to support Fedora.
  * Add kernel options settings in BootloaderOptionsWindow.
  * Mount filesystems in a temporary directory instead of in /mnt.
  * Unmount EFI partition after modifying EFI bootloaders.
  * Remove BootloaderRemovalTools.
  * Remove BootloaderInstallationTools.
  * Tidy up InitThread.
  * Don't use BackupBootSector any more.
  * Add comments and logging messages in BootloaderOptionsWindow.
  * Add basic functionality for restoring the bootloader in BootloaderOptionsWindow.
  * Remove EssentialBackendTools.BackupBootSector.
  * Remove EssentialBackendTools.RestoreBootSector.
  * Remove the last of the abstraction code for operation-running functions.
  * Don't use "BootSectorFile" any more.
  * Don't use "RestoreBootsector" any more.
  * Don't use "BootSectorBackupType" any more.
  * Don't use "BootSectorTargetDevice" any more.
  * Get rid of RestoreWindow.
  * General maintenance.
  * General maintenance and improve default OS detection with grub2.
  * Remove SystemInfo["Devices"].
  * Remove SystemInfo["LinuxPartitions"].
  * Remove MainStartupTools.SortSomeInfo().
  * Don't use chroot in CoreStartupTools.DetermineOSArch().
  * Put package manager detection code in CoreStartupTools.DeterminePackageManager() and refactor it.
  * Improve detection of UEFI firmware.
  * Rename SystemInfo["DetectedFirmwareType"] to SystemInfo["FirmwareType"].
  * Remove Settings["FirmwareType"].
  * General maintenance in MainStartupTools.
  * General maintenance in MainBackendTools.
  * Refactoring and general maintenance in MainBackendTools.
  * Refactoring and general maintenance in HelperBackendTools.
  * Combine EssentialBackendTools.QuickFileSystemCheck and EssentialBackendTools.BadSectorCheck to make EssentialBackendTools.FileSystemCheck.
  * Improve default OS detection with grub2.
  * Fixes for Fedora in CoreTools.SetUpChroot().
  * Bootloader config detection fixes for Fedora.
  * LVM fixes.
  * LVM fix so IsCurrentOS works on Fedora.
  * Fix Filesystem Checking.
  * Complete 1st Fedora packaging test.
  * Fix a bug in the authentication dialog that causes it to not work on Fedora.
  * Fix in GetDevInfo.
  * Fixes in GRUB2 menuentry parsing.
  * Ubuntu: Use DEBIAN_FRONTEND=noninteractive when purging bootloader packages.
  * Fix in LILO/ELILO config getting.
  * Test on Ubuntu 12.04.
  * Test on Ubuntu 14.04.
  * Comment out existing menu entries when configuring ELILO/LILO.
  * Test on Ubuntu 15.10.
  * Test on Ubuntu 16.04.
  * Fix some bootloader config obtaining bugs.
  * Make icon appear in about box on Fedora.
  * Run startup scripts again after restarting Fedora.
  * Test DialogTools stuff is working properly.
  * Remove SystemInfo["UEFISystemPartition"].
  * General maintenance and fixes.
  * Use "arch" to determine OS architecture.
  * Write Fedora package commands.
  * Test updating & reinstalling grub2 on Fedora.
  * Prepare to use a menu with ELILO.
  * Fix layout glitch in ProgressWindow.
  * Allow installing EFI bootloaders on BIOS systems.
  * Fix terminal output problems with 'badblocks' (Bad sector checking).
  * Test on Fedora.
  * Test on Parted Magic.
  * Fix several small issues.
