#!/usr/bin/env python
import wx
import time

class CustomTextCtrl(wx.TextCtrl):
    def __init__(self, parent, id, value, size, style):
        """Initialise the custom wx.TextCtrl"""
        wx.TextCtrl.__init__(self, parent, id, "", size=size, style=style)

    def MacPositionToXY(self, InsertionPoint):
        """A custom version of wx.TextCtrl.PositionToXY() that works on OS X (the built-in one isn't implemented on OS X)."""
        #Count the number and position of newline characters.
        Text = self.GetRange(0, InsertionPoint)

        NewLines = [0] #Count the start of the text as a newline.
        Counter = 0
        for Char in Text:
            Counter += 1

            if Char == "\n":
                NewLines.append(Counter)

        #Find the last newline before our insertion point.
        for NewLine in NewLines:
            if NewLines.index(NewLine)+1 == len(NewLines) or NewLine == InsertionPoint:
                #This is the last newline in the text, or the newline at our insertion point, and therefore the one we want.
                LastNewLine = NewLine
                break

            elif NewLine < InsertionPoint:
                pass

            else:
                #When this is triggered, the previous newline (last iteration of the loop) is the one we want.
                index = NewLines.index(NewLine)
                LastNewLine = NewLines[index-1]
                break

        #Figure out what column we're in (how many chars after the last newline).
        Column = InsertionPoint - LastNewLine

        #Figure out which line we're on (the number of the last newline).
        Row = NewLines.index(LastNewLine)

        return (Column,Row)

    def MacXYToPosition(self, Column, Row):
        """A custom version of wx.TextCtrl.XYToPosition() that works on OS X (the built-in one isn't implemented on OS X).
        This is also helpful for Linux because the built-in one has a"""
        #Count the number and position of newline characters.
        Text = self.GetValue()

        NewLines = [0] #Count the start of the text as a newline.
        Counter = 0
        for Char in Text:
            Counter += 1

            if Char == "\n":
                NewLines.append(Counter)

        #Get the last newline.
        LastNewLine = NewLines[Row]

        #Our position should be that number plus our column.
        Position = LastNewLine + Column

        return Position

class TextFrame(wx.Frame):
    def __init__(self):
        wx.Frame.__init__(self, None, -1, 'Text Editor', size=(300, 250))

        self.panel = wx.Panel(self, -1) 

        self.multiText = CustomTextCtrl(self.panel, -1,"",size=(200, 100), style=wx.TE_MULTILINE|wx.EXPAND)

        sizer = wx.BoxSizer()
        sizer.Add(self.multiText, proportion=1, flag=wx.CENTER|wx.EXPAND)
        self.panel.SetSizer(sizer)

        self.CreateStatusBar()

        self.multiText.Bind(wx.EVT_KEY_UP, self.updateLineCol)
        self.multiText.Bind(wx.EVT_LEFT_DOWN, self.updateLineCol)

    def updateLineCol(self, event):
        Col, Row = self.multiText.MacPositionToXY(self.multiText.GetInsertionPoint())
        stat = "col=%s, row=%s" % (Col,Row)

        self.StatusBar.SetStatusText(stat, number=0)

        event.Skip()

app = wx.App(False)
frame = TextFrame()
frame.Show()
app.MainLoop()
